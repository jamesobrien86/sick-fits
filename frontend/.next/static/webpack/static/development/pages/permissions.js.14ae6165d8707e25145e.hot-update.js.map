{"version":3,"file":"static/webpack/static/development/pages/permissions.js.14ae6165d8707e25145e.hot-update.js","sources":["webpack:///./components/Permissions.js"],"sourcesContent":["import { Query } from 'react-apollo';\nimport PropTypes from 'prop-types';\nimport gql from 'graphql-tag';\nimport Error from './ErrorMessage';\nimport Table from './styles/Table';\nimport SickButton from './styles/SickButton';\n\n\nconst possiblePermissions = [\n  'ADMIN',\n  'USER',\n  'ITEMCREATE',\n  'ITEMUPDATE',\n  'ITEMDELETE',\n  'PERMISSIONUPDATE',\n];\n\nconst ALL_USERS_QUERY = gql`\n  query {\n    users {\n      id\n      name\n      email\n      permissions\n    }\n  }\n`\n\n\nconst Permissions = props => (\n  <Query query={ALL_USERS_QUERY}>\n    {({data,loading, error}) => \n      console.log(data) || (\n        <div>\n        <Error error={error} />\n        <div>\n          <h2>Manage your Permissions</h2>\n          <Table>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Email</th>\n                {\n                  possiblePermissions.map(permission => \n                    <th>{permission}</th>\n                  )\n                }\n                <th>Click to update</th>\n              </tr>\n            </thead>\n            <tbody>\n              {\n                data.users.map(user => <User user={user} />)\n              }\n            </tbody>\n          </Table>\n        </div>\n        </div>\n\n    )}\n\n  </Query>\n)\n\nclass User extends React.Component{\n  static propTypes = {\n    user: PropTypes.shape({\n      name: PropTypes.string,\n      email: PropTypes.string,\n      id: PropTypes.string,\n      permissions: PropTypes.array,\n    }).isRequired,\n  };\n  // ok to set state as props due to props being seeded from the \n  // other component\n  state = { \n    permissions: this.props.user.permissions,\n  }\n  render(){\n    const user = this.props.user;\n    return (\n      <tr>\n        <td>{user.name}</td>\n        <td>{user.email}</td>\n        {possiblePermissions.map(permission => (\n          <td>\n            <label htmlFor={`${user.id}-permission-${permission}`}>\n              <input type=\"checkbox\"\n\n              />\n            </label>\n          </td>\n        ))}\n        <td>\n          <SickButton>\n            Update\n          </SickButton>\n        </td>\n      </tr>\n    )\n  }\n}\n\nexport default Permissions;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AASA;AACA;AAWA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AArBA;AAFA;AACA;AAkCA;;;;;;;;;;;;;;;;;;AAWA;AACA;AADA;AACA;;;;;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AApCA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AAJA;AADA;AACA;AAqCA;;;;A","sourceRoot":""}